{"version":3,"sources":["three.js","App.js","index.js"],"names":["window","innerHeight","innerWidth","scene","Scene","camera","PerspectiveCamera","position","z","x","y","camW","Object3D","add","render","WebGLRenderer","setSize","setPixelRatio","devicePixelRatio","document","body","appendChild","domElement","p","line","configs","i","length","lineMaterial","LineBasicMaterial","color","LineSegments","createGeometry","scale","userData","originalScale","rotation","Math","random","PI","updateMatrix","light","DirectionalLight","set","light1","sphere1","Mesh","SphereBufferGeometry","MeshPhongMaterial","wireframe","circleGeo","CircleGeometry","vertices","shift","circle","LineLoop","circleGeo1","delta","circle1","num","lineScale","geometry","BufferGeometry","vertex","Vector3","normalize","multiplyScalar","push","setAttribute","Float32BufferAttribute","animate","time","requestAnimationFrame","children","abs","sin","lookAt","App","useEffect","tl","gsap","timeline","st","id","el","getElementById","innerHTML","split","map","word","c","join","chars","Array","from","e","splitText","flat","duration","opacity","ease","Expo","easeInOut","stagger","delay","TweenMax","staggerFrom","to","top","className","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.c2c474be.chunk.js","sourcesContent":["\n// \nimport {\n  Scene,\n  DirectionalLight,\n  CircleGeometry,\n  LineBasicMaterial,\n  PerspectiveCamera,\n  WebGLRenderer,\n  Vector3,\n  Object3D,\n  BufferGeometry,\n  Float32BufferAttribute,\n  Mesh,\n  SphereBufferGeometry,\n  MeshPhongMaterial,\n  LineLoop,\n  LineSegments,\n} from \"three\";\nlet {innerHeight, innerWidth} = window\nlet scene = new Scene();\nlet camera = new PerspectiveCamera(20, innerWidth / innerHeight, 1, 10000);\ncamera.position.z = 1200;\ncamera.position.x = 1200;\ncamera.position.y = 1200;\n\nlet camW = new Object3D();\n\ncamW.add(camera);\n\nscene.add(camW);\n\nlet render = new WebGLRenderer();\nrender.setSize(innerWidth, innerHeight);\nrender.setPixelRatio(devicePixelRatio);\n\ndocument.body.appendChild(render.domElement);\n\nlet configs = [\n  [0.25, 0xffffff, 0.1],\n  [0.5, 0xd3ba4a, 0.02],\n  [5, 0xffffff, .03],\n];\nlet p;\nlet r = 450;\nlet line;\n\nfor (let i = 0; i < configs.length; i++) {\n  p = configs[i];\n  let lineMaterial = new LineBasicMaterial({\n    color: p[1],\n  });\n\n    line = new LineSegments(\n      createGeometry((configs.length - i) * 3000, p[2]),\n      lineMaterial\n    );\n\n  line.scale.x = line.scale.y = line.scale.z = p[0];\n  line.userData.originalScale = p[0];\n  line.rotation.y = Math.random() * Math.PI/2;\n  line.updateMatrix();\n\n  scene.add(line);\n}\n\n// light\nlet light = new DirectionalLight(0xd3ba4a, 1, 100);\nlight.position.set(5, 5, -5);\nscene.add(light);\nlet light1 = new DirectionalLight(0xffffff);\nlight1.position.set(-5, -5, 5);\nscene.add(light1);\n\n// sphere\n// let sphereGeo = new SphereBufferGeometry(80, 32, 32);\n// let sphereMaterial = new MeshPhongMaterial({\n//   shininess: 40,\n// });\n// let sphere = new Mesh(sphereGeo, sphereMaterial);\n// scene.add(sphere);\n\n// sphere\nlet sphere1 = new Mesh(\n  new SphereBufferGeometry(200, 16, 8),\n  new MeshPhongMaterial({\n    color: 0xffffff,\n    wireframe: true,\n  })\n);\nscene.add(sphere1);\n\n// circle\nlet circleGeo = new CircleGeometry(200, 64);\ncircleGeo.vertices.shift();\nlet circle = new LineLoop(\n  circleGeo,\n  new LineBasicMaterial({\n    color: 0xd3ba4a,\n  })\n);\nscene.add(circle);\n\n// circle 1\nlet circleGeo1 = new CircleGeometry(200, 64);\ncircleGeo1.vertices.shift();\nlet circle1 = new LineLoop(\n  circleGeo1,\n  new LineBasicMaterial({\n    color: 0xd3ba4a,\n  })\n);\nscene.add(circle1);\n\n// stars\n// var geometry = new BufferGeometry();\n// var vertices = [];\n// for (var i = 0; i < 10000; i++) {\n//   vertices.push(MathUtils.randFloatSpread(2000)); // x\n//   vertices.push(MathUtils.randFloatSpread(2000)); // y\n//   vertices.push(MathUtils.randFloatSpread(2000)); // z\n// }\n// geometry.setAttribute(\"position\", new Float32BufferAttribute(vertices, 3));\n\n// var particles = new Points(geometry, new PointsMaterial({ color: 0xffffff }));\n// scene.add(particles);\n\nlet delta;\nfunction animate(time) {\n  requestAnimationFrame(animate);\n  render.render(scene, camera);\n  delta = time * 0.001;\n\n  // camera.fov = 40 + 5 * Math.sin(0.1 * delta * Math.PI);\n  // camera.updateProjectionMatrix();\n\n  scene.children[2].scale.x = scene.children[2].scale.y = scene.children[2].scale.z =\n        Math.abs(Math.sin(0.1 * delta * Math.PI)) + 0.4;\n  scene.children[2].updateMatrix();\n\n  sphere1.rotation.z = delta * -0.2\n\n  circle.rotation.x = delta;\n  circle1.rotation.y = delta;\n\n  camW.rotation.z = delta * 0.5;\n  camW.rotation.x = delta * 0.3;\n\n  camera.lookAt( 0, 0, 0 );\n}\n\nfunction createGeometry(num, lineScale) {\n  var geometry = new BufferGeometry();\n  var vertices = [];\n\n  var vertex = new Vector3();\n  for (var i = 0; i < num; i++) {\n    vertex.x = Math.random() * 2 - 1;\n    vertex.y = Math.random() * 2 - 1;\n    vertex.z = Math.random() * 2 - 1;\n\n    vertex.normalize();\n    vertex.multiplyScalar(r);\n\n    vertices.push(vertex.x, vertex.y, vertex.z);\n\n    vertex.multiplyScalar(Math.random() * lineScale + 1);\n\n    vertices.push(vertex.x, vertex.y, vertex.z);\n  }\n\n  geometry.setAttribute(\"position\", new Float32BufferAttribute(vertices, 3));\n\n  return geometry;\n}\nanimate();\n\n","import React, { useEffect } from \"react\";\nimport { TweenMax, Expo, gsap } from \"gsap\";\nimport \"./App.scss\";\nimport './three'\n\nfunction App() {\n  useEffect(() => {\n    let tl = gsap.timeline();\n    let st = splitText(\"text\");\n\n    tl.from(st.chars.flat(), {\n      duration: 1,\n      opacity: 0,\n      y: \"100%\",\n      ease: Expo.easeInOut,\n      stagger: 0.06,\n      delay: 1,\n    });\n\n    TweenMax.staggerFrom(\n      \"nav i\",\n      1.5,\n      {\n        delay: 1.5,\n        opacity: 0,\n        y: \"20\",\n        ease: Expo.easeInOut,\n      },\n      0.08\n    );\n\n    TweenMax.staggerFrom(\n      \".social li\",\n      1.5,\n      {\n        delay: 1.5,\n        opacity: 0,\n        x: \"-20\",\n        ease: Expo.easeInOut,\n      },\n      0.08\n    );\n\n    TweenMax.from(\".text h3 \", 1.5, {\n      delay: 1.2,\n      y: \"100%\",\n      opacity: 0,\n      ease: Expo.easeInOut,\n    });\n\n    TweenMax.from(\".text p \", 1.5, {\n      delay: 1.3,\n      y: \"100%\",\n      opacity: 0,\n      ease: Expo.easeInOut,\n    });\n\n    TweenMax.from(\".text h2\", 1.5, {\n      delay: 1.5,\n      opacity: 0,\n      x: \"-10000\",\n      ease: Expo.easeInOut,\n    });\n\n    TweenMax.from(\".sponsor h4\", 1.5, {\n      delay: 1.5,\n      opacity: 0,\n      y: \"20\",\n      ease: Expo.easeInOut,\n    });\n\n    TweenMax.from(\".sponsor p\", 1.5, {\n      delay: 1.6,\n      opacity: 0,\n      y: \"20\",\n      ease: Expo.easeInOut,\n    });\n\n    TweenMax.to(\".st\", 1.5, {\n      delay: 0.5,\n      top: \"-100%\",\n      ease: Expo.easeInOut,\n    });\n\n    TweenMax.to(\".nd\", 1.5, {\n      delay: 0.7,\n      top: \"-100%\",\n      ease: Expo.easeInOut,\n    });\n\n    TweenMax.to(\".rd\", 1.5, {\n      delay: 0.9,\n      top: \"-100%\",\n      ease: Expo.easeInOut,\n    });\n  });\n  return (\n    <div className=\"wrapper\">\n      <div className=\"overlay st\"></div>\n      <div className=\"overlay nd\"></div>\n      <div className=\"overlay rd\"></div>\n\n      <nav>\n        <i className=\"fas fa-bars\"></i>\n        <i className=\"lang\">EN</i>\n        <i className=\"fas fa-search\"></i>\n      </nav>\n\n      <ul className=\"social\">\n        <li>Github</li>\n        <li>LinkedIn</li>\n        <li>Facebook</li>\n      </ul>\n\n      {/* <ul className=\"q-nav\">\n        <li>Interest</li>\n        <li>project</li>\n        <li>Tricks</li>\n      </ul> */}\n\n      <div className=\"text\">\n        <h1 id=\"text\">ng. tuong</h1>\n\n        <h2>va.tu &ng</h2>\n\n        <h3>\n          web developer\n        </h3>\n        <p>\n          Strong knowledge of web and game development. Interested in\n          animations, webgl.\n        </p>\n      </div>\n\n      <div className=\"sponsor\">\n        <p> official website</p>\n        <h4>\n          tuong <span className=\"text-yellow\">n</span>guyen\n        </h4>\n      </div>\n    </div>\n  );\n}\n\nfunction splitText(id) {\n  let el = document.getElementById(\"text\");\n  if (el)\n    el.innerHTML = el.innerHTML\n      .split(\" \")\n      .map(\n        (word) =>\n          `<div style=\"display: inline-block; position: relative;\">${word\n            .split(\"\")\n            .map(\n              (c) =>\n                `<div style=\"display: inline-block; position: relative;\">${c}</div>`\n            )\n            .join(\"\")}</div>`\n      )\n      .join(\" \");\n\n  let chars = Array.from(el.children).map((e) => Array.from(e.children));\n  return {\n    el,\n    chars,\n  };\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}